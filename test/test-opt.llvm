; ModuleID = 'test.llvm'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private constant [5 x i8] c"test\00"
@.str1 = private constant [4 x i8] c"0:0\00"
@.str2 = private constant [6 x i8] c"0:0-4\00"
@.str3 = private constant [4 x i8] c"1:1\00"
@.str4 = private constant [4 x i8] c"phi\00"
@.str5 = private constant [5 x i8] c"test\00"
@.str6 = private constant [4 x i8] c"1:1\00"
@.str7 = private constant [12 x i8] c"indvars.iv4\00"
@.str8 = private constant [17 x i8] c"indvars.iv.next5\00"
@.str9 = private constant [5 x i8] c"13:1\00"
@.str10 = private constant [1 x i8] zeroinitializer
@.str11 = private constant [4 x i8] c"0:0\00"
@.str12 = private constant [12 x i8] c"indvars.iv4\00"
@.str13 = private constant [4 x i8] c"0:0\00"
@.str14 = private constant [5 x i8] c"test\00"
@.str15 = private constant [4 x i8] c"1:1\00"
@.str16 = private constant [2 x i8] c"2\00"
@.str17 = private constant [12 x i8] c"indvars.iv4\00"
@.str18 = private constant [4 x i8] c"phi\00"
@.str19 = private constant [2 x i8] c"c\00"
@.str20 = private constant [4 x i8] c"phi\00"
@.str21 = private constant [2 x i8] c"2\00"
@.str22 = private constant [4 x i8] c"phi\00"
@.str23 = private constant [5 x i8] c"test\00"
@.str24 = private constant [4 x i8] c"1:1\00"
@.str25 = private constant [2 x i8] c"3\00"
@.str26 = private constant [2 x i8] c"2\00"
@.str27 = private constant [4 x i8] c"phi\00"
@.str28 = private constant [2 x i8] c"3\00"
@.str29 = private constant [4 x i8] c"phi\00"
@.str30 = private constant [5 x i8] c"test\00"
@.str31 = private constant [4 x i8] c"1:1\00"
@.str32 = private constant [2 x i8] c"4\00"
@.str33 = private constant [1 x i8] zeroinitializer
@.str34 = private constant [4 x i8] c"phi\00"
@.str35 = private constant [12 x i8] c"indvars.iv4\00"
@.str36 = private constant [4 x i8] c"phi\00"
@.str37 = private constant [2 x i8] c"4\00"
@.str38 = private constant [4 x i8] c"phi\00"
@.str39 = private constant [5 x i8] c"test\00"
@.str40 = private constant [4 x i8] c"1:1\00"
@.str41 = private constant [6 x i8] c"1:1-2\00"
@.str42 = private constant [4 x i8] c"5:2\00"
@.str43 = private constant [4 x i8] c"phi\00"
@.str44 = private constant [5 x i8] c"test\00"
@.str45 = private constant [4 x i8] c"5:2\00"
@.str46 = private constant [11 x i8] c"indvars.iv\00"
@.str47 = private constant [16 x i8] c"indvars.iv.next\00"
@.str48 = private constant [4 x i8] c"5:2\00"
@.str49 = private constant [1 x i8] zeroinitializer
@.str50 = private constant [4 x i8] c"1:1\00"
@.str51 = private constant [11 x i8] c"indvars.iv\00"
@.str52 = private constant [4 x i8] c"1:1\00"
@.str53 = private constant [5 x i8] c"test\00"
@.str54 = private constant [4 x i8] c"5:2\00"
@.str55 = private constant [7 x i8] c"tmp.02\00"
@.str56 = private constant [3 x i8] c"12\00"
@.str57 = private constant [4 x i8] c"5:2\00"
@.str58 = private constant [2 x i8] c"3\00"
@.str59 = private constant [4 x i8] c"1:1\00"
@.str60 = private constant [7 x i8] c"tmp.02\00"
@.str61 = private constant [4 x i8] c"1:1\00"
@.str62 = private constant [5 x i8] c"test\00"
@.str63 = private constant [4 x i8] c"5:2\00"
@.str64 = private constant [2 x i8] c"6\00"
@.str65 = private constant [11 x i8] c"indvars.iv\00"
@.str66 = private constant [4 x i8] c"phi\00"
@.str67 = private constant [2 x i8] c"a\00"
@.str68 = private constant [4 x i8] c"phi\00"
@.str69 = private constant [2 x i8] c"6\00"
@.str70 = private constant [4 x i8] c"phi\00"
@.str71 = private constant [5 x i8] c"test\00"
@.str72 = private constant [4 x i8] c"5:2\00"
@.str73 = private constant [2 x i8] c"7\00"
@.str74 = private constant [2 x i8] c"6\00"
@.str75 = private constant [4 x i8] c"phi\00"
@.str76 = private constant [2 x i8] c"7\00"
@.str77 = private constant [4 x i8] c"phi\00"
@.str78 = private constant [5 x i8] c"test\00"
@.str79 = private constant [4 x i8] c"5:2\00"
@.str80 = private constant [2 x i8] c"8\00"
@.str81 = private constant [2 x i8] c"4\00"
@.str82 = private constant [4 x i8] c"phi\00"
@.str83 = private constant [11 x i8] c"indvars.iv\00"
@.str84 = private constant [4 x i8] c"phi\00"
@.str85 = private constant [2 x i8] c"8\00"
@.str86 = private constant [4 x i8] c"phi\00"
@.str87 = private constant [5 x i8] c"test\00"
@.str88 = private constant [4 x i8] c"5:2\00"
@.str89 = private constant [2 x i8] c"9\00"
@.str90 = private constant [2 x i8] c"8\00"
@.str91 = private constant [4 x i8] c"phi\00"
@.str92 = private constant [2 x i8] c"b\00"
@.str93 = private constant [4 x i8] c"phi\00"
@.str94 = private constant [2 x i8] c"9\00"
@.str95 = private constant [4 x i8] c"phi\00"
@.str96 = private constant [5 x i8] c"test\00"
@.str97 = private constant [4 x i8] c"5:2\00"
@.str98 = private constant [3 x i8] c"10\00"
@.str99 = private constant [2 x i8] c"9\00"
@.str100 = private constant [4 x i8] c"phi\00"
@.str101 = private constant [3 x i8] c"10\00"
@.str102 = private constant [4 x i8] c"phi\00"
@.str103 = private constant [5 x i8] c"test\00"
@.str104 = private constant [4 x i8] c"5:2\00"
@.str105 = private constant [3 x i8] c"11\00"
@.str106 = private constant [2 x i8] c"7\00"
@.str107 = private constant [4 x i8] c"phi\00"
@.str108 = private constant [3 x i8] c"10\00"
@.str109 = private constant [4 x i8] c"phi\00"
@.str110 = private constant [3 x i8] c"11\00"
@.str111 = private constant [4 x i8] c"phi\00"
@.str112 = private constant [5 x i8] c"test\00"
@.str113 = private constant [4 x i8] c"5:2\00"
@.str114 = private constant [3 x i8] c"12\00"
@.str115 = private constant [7 x i8] c"tmp.02\00"
@.str116 = private constant [4 x i8] c"phi\00"
@.str117 = private constant [3 x i8] c"11\00"
@.str118 = private constant [4 x i8] c"phi\00"
@.str119 = private constant [3 x i8] c"12\00"
@.str120 = private constant [4 x i8] c"phi\00"
@.str121 = private constant [5 x i8] c"test\00"
@.str122 = private constant [4 x i8] c"5:2\00"
@.str123 = private constant [16 x i8] c"indvars.iv.next\00"
@.str124 = private constant [1 x i8] zeroinitializer
@.str125 = private constant [4 x i8] c"phi\00"
@.str126 = private constant [11 x i8] c"indvars.iv\00"
@.str127 = private constant [4 x i8] c"phi\00"
@.str128 = private constant [16 x i8] c"indvars.iv.next\00"
@.str129 = private constant [4 x i8] c"phi\00"
@.str130 = private constant [5 x i8] c"test\00"
@.str131 = private constant [4 x i8] c"5:2\00"
@.str132 = private constant [9 x i8] c"exitcond\00"
@.str133 = private constant [1 x i8] zeroinitializer
@.str134 = private constant [4 x i8] c"phi\00"
@.str135 = private constant [16 x i8] c"indvars.iv.next\00"
@.str136 = private constant [4 x i8] c"phi\00"
@.str137 = private constant [9 x i8] c"exitcond\00"
@.str138 = private constant [4 x i8] c"phi\00"
@.str139 = private constant [5 x i8] c"test\00"
@.str140 = private constant [4 x i8] c"5:2\00"
@.str141 = private constant [6 x i8] c"5:2-1\00"
@.str142 = private constant [5 x i8] c"13:1\00"
@.str143 = private constant [4 x i8] c"phi\00"
@.str144 = private constant [4 x i8] c"5:2\00"
@.str145 = private constant [4 x i8] c"phi\00"
@.str146 = private constant [9 x i8] c"exitcond\00"
@.str147 = private constant [4 x i8] c"phi\00"
@.str148 = private constant [5 x i8] c"test\00"
@.str149 = private constant [5 x i8] c"13:1\00"
@.str150 = private constant [7 x i8] c"13:1-0\00"
@.str151 = private constant [2 x i8] c"2\00"
@.str152 = private constant [4 x i8] c"phi\00"
@.str153 = private constant [3 x i8] c"12\00"
@.str154 = private constant [4 x i8] c"phi\00"
@.str155 = private constant [5 x i8] c"test\00"
@.str156 = private constant [5 x i8] c"13:1\00"
@.str157 = private constant [17 x i8] c"indvars.iv.next5\00"
@.str158 = private constant [1 x i8] zeroinitializer
@.str159 = private constant [4 x i8] c"phi\00"
@.str160 = private constant [12 x i8] c"indvars.iv4\00"
@.str161 = private constant [4 x i8] c"phi\00"
@.str162 = private constant [17 x i8] c"indvars.iv.next5\00"
@.str163 = private constant [4 x i8] c"phi\00"
@.str164 = private constant [5 x i8] c"test\00"
@.str165 = private constant [5 x i8] c"13:1\00"
@.str166 = private constant [10 x i8] c"exitcond6\00"
@.str167 = private constant [1 x i8] zeroinitializer
@.str168 = private constant [4 x i8] c"phi\00"
@.str169 = private constant [17 x i8] c"indvars.iv.next5\00"
@.str170 = private constant [4 x i8] c"phi\00"
@.str171 = private constant [10 x i8] c"exitcond6\00"
@.str172 = private constant [4 x i8] c"phi\00"
@.str173 = private constant [5 x i8] c"test\00"
@.str174 = private constant [5 x i8] c"13:1\00"
@.str175 = private constant [7 x i8] c"13:1-1\00"
@.str176 = private constant [5 x i8] c"14:0\00"
@.str177 = private constant [4 x i8] c"phi\00"
@.str178 = private constant [4 x i8] c"1:1\00"
@.str179 = private constant [4 x i8] c"phi\00"
@.str180 = private constant [10 x i8] c"exitcond6\00"
@.str181 = private constant [4 x i8] c"phi\00"
@.str182 = private constant [5 x i8] c"test\00"
@.str183 = private constant [5 x i8] c"14:0\00"
@.str184 = private constant [7 x i8] c"14:0-0\00"
@.str185 = private constant [5 x i8] c"main\00"
@.str186 = private constant [4 x i8] c"0:0\00"
@.str187 = private constant [2 x i8] c"2\00"
@.str188 = private constant [2 x i8] c"1\00"
@.str189 = private constant [4 x i8] c"phi\00"
@.str190 = private constant [2 x i8] c"2\00"
@.str191 = private constant [4 x i8] c"phi\00"
@.str192 = private constant [5 x i8] c"main\00"
@.str193 = private constant [4 x i8] c"0:0\00"
@.str194 = private constant [2 x i8] c"3\00"
@.str195 = private constant [2 x i8] c"2\00"
@.str196 = private constant [4 x i8] c"phi\00"
@.str197 = private constant [2 x i8] c"3\00"
@.str198 = private constant [4 x i8] c"phi\00"
@.str199 = private constant [5 x i8] c"main\00"
@.str200 = private constant [4 x i8] c"0:0\00"
@.str201 = private constant [2 x i8] c"5\00"
@.str202 = private constant [2 x i8] c"4\00"
@.str203 = private constant [4 x i8] c"phi\00"
@.str204 = private constant [2 x i8] c"5\00"
@.str205 = private constant [4 x i8] c"phi\00"
@.str206 = private constant [5 x i8] c"main\00"
@.str207 = private constant [4 x i8] c"0:0\00"
@.str208 = private constant [2 x i8] c"6\00"
@.str209 = private constant [2 x i8] c"5\00"
@.str210 = private constant [4 x i8] c"phi\00"
@.str211 = private constant [2 x i8] c"6\00"
@.str212 = private constant [4 x i8] c"phi\00"
@.str213 = private constant [5 x i8] c"main\00"
@.str214 = private constant [4 x i8] c"0:0\00"
@.str215 = private constant [2 x i8] c"8\00"
@.str216 = private constant [2 x i8] c"7\00"
@.str217 = private constant [4 x i8] c"phi\00"
@.str218 = private constant [2 x i8] c"8\00"
@.str219 = private constant [4 x i8] c"phi\00"
@.str220 = private constant [5 x i8] c"main\00"
@.str221 = private constant [4 x i8] c"0:0\00"
@.str222 = private constant [2 x i8] c"9\00"
@.str223 = private constant [2 x i8] c"8\00"
@.str224 = private constant [4 x i8] c"phi\00"
@.str225 = private constant [2 x i8] c"9\00"
@.str226 = private constant [4 x i8] c"phi\00"
@.str227 = private constant [5 x i8] c"main\00"
@.str228 = private constant [4 x i8] c"0:0\00"
@.str229 = private constant [6 x i8] c"0:0-3\00"
@.str230 = private constant [5 x i8] c"test\00"
@.str231 = private constant [4 x i8] c"phi\00"
@.str232 = private constant [2 x i8] c"3\00"
@.str233 = private constant [4 x i8] c"phi\00"
@.str234 = private constant [2 x i8] c"a\00"
@.str235 = private constant [4 x i8] c"phi\00"
@.str236 = private constant [2 x i8] c"6\00"
@.str237 = private constant [4 x i8] c"phi\00"
@.str238 = private constant [2 x i8] c"b\00"
@.str239 = private constant [4 x i8] c"phi\00"
@.str240 = private constant [2 x i8] c"9\00"
@.str241 = private constant [4 x i8] c"phi\00"
@.str242 = private constant [2 x i8] c"c\00"
@.str243 = private constant [4 x i8] c"phi\00"
@.str244 = private constant [5 x i8] c"main\00"
@.str245 = private constant [4 x i8] c"0:0\00"
@.str246 = private constant [6 x i8] c"0:0-4\00"
@.str247 = private constant [1 x i8] zeroinitializer
@.str248 = private constant [4 x i8] c"phi\00"
@.str249 = private constant [29 x i8] c"test/loopi 14\0Atest/loopj 16\0A\00"

; Function Attrs: nounwind uwtable
define void @test(i32* nocapture readonly %a, i32* nocapture readonly %b, i32* nocapture %c) #0 {
  tail call void @llvm.dbg.value(metadata !{i32* %a}, i64 0, metadata !11), !dbg !29
  tail call void @llvm.dbg.value(metadata !{i32* %b}, i64 0, metadata !12), !dbg !29
  tail call void @llvm.dbg.value(metadata !{i32* %c}, i64 0, metadata !13), !dbg !29
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !14), !dbg !30
  call void @trace_logger_log0(i64 14, i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str2, i32 0, i32 0), i64 2, i1 true, i1 true), !dbg !30
  call void @trace_logger_log_int(i64 1, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([4 x i8]* @.str3, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str4, i32 0, i32 0)), !dbg !30
  br label %1, !dbg !30

; <label>:1                                       ; preds = %34, %0
  %indvars.iv4 = phi i64 [ 0, %0 ], [ %indvars.iv.next5, %34 ]
  call void @trace_logger_log0(i64 -1, i8* getelementptr inbounds ([5 x i8]* @.str5, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str7, i32 0, i32 0), i64 48, i1 true, i1 true), !dbg !31
  call void @trace_logger_log_int(i64 2, i64 64, i64 0, i64 1, i8* getelementptr inbounds ([17 x i8]* @.str8, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([5 x i8]* @.str9, i32 0, i32 0)), !dbg !31
  call void @trace_logger_log_int(i64 1, i64 64, i64 0, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str10, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str11, i32 0, i32 0)), !dbg !31
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %indvars.iv4, i64 1, i8* getelementptr inbounds ([12 x i8]* @.str12, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str13, i32 0, i32 0)), !dbg !31
  call void @trace_logger_log0(i64 15, i8* getelementptr inbounds ([5 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str15, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str16, i32 0, i32 0), i64 29, i1 true, i1 true), !dbg !31
  call void @trace_logger_log_int(i64 2, i64 64, i64 %indvars.iv4, i64 1, i8* getelementptr inbounds ([12 x i8]* @.str17, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str18, i32 0, i32 0)), !dbg !31
  %2 = ptrtoint i32* %c to i64, !dbg !31
  call void @trace_logger_log_int(i64 1, i64 64, i64 %2, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str19, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str20, i32 0, i32 0)), !dbg !31
  %3 = getelementptr inbounds i32* %c, i64 %indvars.iv4, !dbg !31
  %4 = ptrtoint i32* %3 to i64, !dbg !31
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %4, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str21, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str22, i32 0, i32 0)), !dbg !31
  call void @trace_logger_log0(i64 15, i8* getelementptr inbounds ([5 x i8]* @.str23, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str24, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str25, i32 0, i32 0), i64 27, i1 true, i1 true), !dbg !31
  %5 = ptrtoint i32* %3 to i64, !dbg !31
  call void @trace_logger_log_int(i64 1, i64 64, i64 %5, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str26, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str27, i32 0, i32 0)), !dbg !31
  %6 = load i32* %3, align 4, !dbg !31, !tbaa !32
  %7 = zext i32 %6 to i64, !dbg !31
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %7, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str28, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str29, i32 0, i32 0)), !dbg !31
  tail call void @llvm.dbg.value(metadata !{i32 %6}, i64 0, metadata !16), !dbg !31
  tail call void @llvm.dbg.value(metadata !2, i64 0, metadata !15), !dbg !36
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8]* @.str30, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str31, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str32, i32 0, i32 0), i64 20, i1 true, i1 true), !dbg !38
  call void @trace_logger_log_int(i64 2, i64 64, i64 4, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str33, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str34, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log_int(i64 1, i64 64, i64 %indvars.iv4, i64 1, i8* getelementptr inbounds ([12 x i8]* @.str35, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str36, i32 0, i32 0)), !dbg !38
  %8 = shl i64 %indvars.iv4, 4, !dbg !38
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %8, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str37, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str38, i32 0, i32 0)), !dbg !36
  call void @trace_logger_log0(i64 16, i8* getelementptr inbounds ([5 x i8]* @.str39, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str41, i32 0, i32 0), i64 2, i1 true, i1 true), !dbg !36
  call void @trace_logger_log_int(i64 1, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([4 x i8]* @.str42, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str43, i32 0, i32 0)), !dbg !36
  br label %9, !dbg !36

; <label>:9                                       ; preds = %9, %1
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %9 ]
  %tmp.02 = phi i32 [ %6, %1 ], [ %30, %9 ]
  call void @trace_logger_log0(i64 -1, i8* getelementptr inbounds ([5 x i8]* @.str44, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str45, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str46, i32 0, i32 0), i64 48, i1 true, i1 true), !dbg !38
  call void @trace_logger_log_int(i64 2, i64 64, i64 0, i64 1, i8* getelementptr inbounds ([16 x i8]* @.str47, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str48, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log_int(i64 1, i64 64, i64 0, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str49, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str50, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %indvars.iv, i64 1, i8* getelementptr inbounds ([11 x i8]* @.str51, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str52, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log0(i64 -1, i8* getelementptr inbounds ([5 x i8]* @.str53, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str54, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str55, i32 0, i32 0), i64 48, i1 true, i1 true), !dbg !38
  call void @trace_logger_log_int(i64 2, i64 32, i64 0, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str56, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str57, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log_int(i64 1, i64 32, i64 0, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str58, i32 0, i32 0), i64 1, i8* getelementptr inbounds ([4 x i8]* @.str59, i32 0, i32 0)), !dbg !38
  %10 = zext i32 %tmp.02 to i64, !dbg !38
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %10, i64 1, i8* getelementptr inbounds ([7 x i8]* @.str60, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str61, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8]* @.str62, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str63, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str64, i32 0, i32 0), i64 29, i1 true, i1 true), !dbg !38
  call void @trace_logger_log_int(i64 2, i64 64, i64 %indvars.iv, i64 1, i8* getelementptr inbounds ([11 x i8]* @.str65, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str66, i32 0, i32 0)), !dbg !38
  %11 = ptrtoint i32* %a to i64, !dbg !38
  call void @trace_logger_log_int(i64 1, i64 64, i64 %11, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str67, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str68, i32 0, i32 0)), !dbg !38
  %12 = getelementptr inbounds i32* %a, i64 %indvars.iv, !dbg !38
  %13 = ptrtoint i32* %12 to i64, !dbg !38
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %13, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str69, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str70, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8]* @.str71, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str72, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str73, i32 0, i32 0), i64 27, i1 true, i1 true), !dbg !38
  %14 = ptrtoint i32* %12 to i64, !dbg !38
  call void @trace_logger_log_int(i64 1, i64 64, i64 %14, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str74, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str75, i32 0, i32 0)), !dbg !38
  %15 = load i32* %12, align 4, !dbg !38, !tbaa !32
  %16 = zext i32 %15 to i64, !dbg !38
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %16, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str76, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str77, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8]* @.str78, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str79, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str80, i32 0, i32 0), i64 8, i1 true, i1 true), !dbg !38
  call void @trace_logger_log_int(i64 2, i64 64, i64 %8, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str81, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str82, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log_int(i64 1, i64 64, i64 %indvars.iv, i64 1, i8* getelementptr inbounds ([11 x i8]* @.str83, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str84, i32 0, i32 0)), !dbg !38
  %17 = add nsw i64 %indvars.iv, %8, !dbg !38
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %17, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str85, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str86, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8]* @.str87, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str88, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str89, i32 0, i32 0), i64 29, i1 true, i1 true), !dbg !38
  call void @trace_logger_log_int(i64 2, i64 64, i64 %17, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str90, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str91, i32 0, i32 0)), !dbg !38
  %18 = ptrtoint i32* %b to i64, !dbg !38
  call void @trace_logger_log_int(i64 1, i64 64, i64 %18, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str92, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str93, i32 0, i32 0)), !dbg !38
  %19 = getelementptr inbounds i32* %b, i64 %17, !dbg !38
  %20 = ptrtoint i32* %19 to i64, !dbg !38
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %20, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str94, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str95, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8]* @.str96, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str97, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str98, i32 0, i32 0), i64 27, i1 true, i1 true), !dbg !38
  %21 = ptrtoint i32* %19 to i64, !dbg !38
  call void @trace_logger_log_int(i64 1, i64 64, i64 %21, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str99, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str100, i32 0, i32 0)), !dbg !38
  %22 = load i32* %19, align 4, !dbg !38, !tbaa !32
  %23 = zext i32 %22 to i64, !dbg !38
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %23, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str101, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str102, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8]* @.str103, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str104, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str105, i32 0, i32 0), i64 12, i1 true, i1 true), !dbg !38
  %24 = zext i32 %15 to i64, !dbg !38
  call void @trace_logger_log_int(i64 2, i64 32, i64 %24, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str106, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str107, i32 0, i32 0)), !dbg !38
  %25 = zext i32 %22 to i64, !dbg !38
  call void @trace_logger_log_int(i64 1, i64 32, i64 %25, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str108, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str109, i32 0, i32 0)), !dbg !38
  %26 = mul nsw i32 %22, %15, !dbg !38
  %27 = zext i32 %26 to i64, !dbg !38
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %27, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str110, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str111, i32 0, i32 0)), !dbg !38
  call void @trace_logger_log0(i64 17, i8* getelementptr inbounds ([5 x i8]* @.str112, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str113, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str114, i32 0, i32 0), i64 8, i1 true, i1 true), !dbg !38
  %28 = zext i32 %tmp.02 to i64, !dbg !38
  call void @trace_logger_log_int(i64 2, i64 32, i64 %28, i64 1, i8* getelementptr inbounds ([7 x i8]* @.str115, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str116, i32 0, i32 0)), !dbg !38
  %29 = zext i32 %26 to i64, !dbg !38
  call void @trace_logger_log_int(i64 1, i64 32, i64 %29, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str117, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str118, i32 0, i32 0)), !dbg !38
  %30 = add nsw i32 %26, %tmp.02, !dbg !38
  %31 = zext i32 %30 to i64, !dbg !38
  call void @trace_logger_log_int(i64 19134, i64 32, i64 %31, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str119, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str120, i32 0, i32 0)), !dbg !38
  tail call void @llvm.dbg.value(metadata !{i32 %30}, i64 0, metadata !16), !dbg !38
  call void @trace_logger_log0(i64 16, i8* getelementptr inbounds ([5 x i8]* @.str121, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str122, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str123, i32 0, i32 0), i64 8, i1 true, i1 true), !dbg !36
  call void @trace_logger_log_int(i64 2, i64 64, i64 1, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str124, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str125, i32 0, i32 0)), !dbg !36
  call void @trace_logger_log_int(i64 1, i64 64, i64 %indvars.iv, i64 1, i8* getelementptr inbounds ([11 x i8]* @.str126, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str127, i32 0, i32 0)), !dbg !36
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !36
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %indvars.iv.next, i64 1, i8* getelementptr inbounds ([16 x i8]* @.str128, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str129, i32 0, i32 0)), !dbg !36
  call void @trace_logger_log0(i64 16, i8* getelementptr inbounds ([5 x i8]* @.str130, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str131, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str132, i32 0, i32 0), i64 46, i1 true, i1 true), !dbg !36
  call void @trace_logger_log_int(i64 2, i64 64, i64 16, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str133, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str134, i32 0, i32 0)), !dbg !36
  call void @trace_logger_log_int(i64 1, i64 64, i64 %indvars.iv.next, i64 1, i8* getelementptr inbounds ([16 x i8]* @.str135, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str136, i32 0, i32 0)), !dbg !36
  %exitcond = icmp eq i64 %indvars.iv.next, 16, !dbg !36
  %32 = zext i1 %exitcond to i64, !dbg !36
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %32, i64 1, i8* getelementptr inbounds ([9 x i8]* @.str137, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str138, i32 0, i32 0)), !dbg !36
  call void @trace_logger_log0(i64 16, i8* getelementptr inbounds ([5 x i8]* @.str139, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str140, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str141, i32 0, i32 0), i64 2, i1 true, i1 true), !dbg !36
  call void @trace_logger_log_int(i64 3, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([5 x i8]* @.str142, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str143, i32 0, i32 0)), !dbg !36
  call void @trace_logger_log_int(i64 2, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([4 x i8]* @.str144, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str145, i32 0, i32 0)), !dbg !36
  %33 = zext i1 %exitcond to i64, !dbg !36
  call void @trace_logger_log_int(i64 1, i64 1, i64 %33, i64 1, i8* getelementptr inbounds ([9 x i8]* @.str146, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str147, i32 0, i32 0)), !dbg !36
  br i1 %exitcond, label %34, label %9, !dbg !36

; <label>:34                                      ; preds = %9
  call void @trace_logger_log0(i64 19, i8* getelementptr inbounds ([5 x i8]* @.str148, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str149, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str150, i32 0, i32 0), i64 28, i1 true, i1 true), !dbg !40
  %35 = ptrtoint i32* %3 to i64, !dbg !40
  call void @trace_logger_log_int(i64 2, i64 64, i64 %35, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str151, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str152, i32 0, i32 0)), !dbg !40
  %36 = zext i32 %30 to i64, !dbg !40
  call void @trace_logger_log_int(i64 1, i64 32, i64 %36, i64 1, i8* getelementptr inbounds ([3 x i8]* @.str153, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str154, i32 0, i32 0)), !dbg !40
  store i32 %30, i32* %3, align 4, !dbg !40, !tbaa !32
  call void @trace_logger_log0(i64 14, i8* getelementptr inbounds ([5 x i8]* @.str155, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str156, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str157, i32 0, i32 0), i64 8, i1 true, i1 true), !dbg !30
  call void @trace_logger_log_int(i64 2, i64 64, i64 1, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str158, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str159, i32 0, i32 0)), !dbg !30
  call void @trace_logger_log_int(i64 1, i64 64, i64 %indvars.iv4, i64 1, i8* getelementptr inbounds ([12 x i8]* @.str160, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str161, i32 0, i32 0)), !dbg !30
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !30
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %indvars.iv.next5, i64 1, i8* getelementptr inbounds ([17 x i8]* @.str162, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str163, i32 0, i32 0)), !dbg !30
  call void @trace_logger_log0(i64 14, i8* getelementptr inbounds ([5 x i8]* @.str164, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str165, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str166, i32 0, i32 0), i64 46, i1 true, i1 true), !dbg !30
  call void @trace_logger_log_int(i64 2, i64 64, i64 16, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str167, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str168, i32 0, i32 0)), !dbg !30
  call void @trace_logger_log_int(i64 1, i64 64, i64 %indvars.iv.next5, i64 1, i8* getelementptr inbounds ([17 x i8]* @.str169, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str170, i32 0, i32 0)), !dbg !30
  %exitcond6 = icmp eq i64 %indvars.iv.next5, 16, !dbg !30
  %37 = zext i1 %exitcond6 to i64, !dbg !30
  call void @trace_logger_log_int(i64 19134, i64 1, i64 %37, i64 1, i8* getelementptr inbounds ([10 x i8]* @.str171, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str172, i32 0, i32 0)), !dbg !30
  call void @trace_logger_log0(i64 14, i8* getelementptr inbounds ([5 x i8]* @.str173, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str174, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str175, i32 0, i32 0), i64 2, i1 true, i1 true), !dbg !30
  call void @trace_logger_log_int(i64 3, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([5 x i8]* @.str176, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str177, i32 0, i32 0)), !dbg !30
  call void @trace_logger_log_int(i64 2, i64 0, i64 0, i64 1, i8* getelementptr inbounds ([4 x i8]* @.str178, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str179, i32 0, i32 0)), !dbg !30
  %38 = zext i1 %exitcond6 to i64, !dbg !30
  call void @trace_logger_log_int(i64 1, i64 1, i64 %38, i64 1, i8* getelementptr inbounds ([10 x i8]* @.str180, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str181, i32 0, i32 0)), !dbg !30
  br i1 %exitcond6, label %39, label %1, !dbg !30

; <label>:39                                      ; preds = %34
  call void @trace_logger_log0(i64 21, i8* getelementptr inbounds ([5 x i8]* @.str182, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str183, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str184, i32 0, i32 0), i64 1, i1 true, i1 true), !dbg !41
  ret void, !dbg !41
}

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
  call void @trace_logger_write_labelmap(i8* getelementptr inbounds ([29 x i8]* @.str249, i32 0, i32 0), i64 28), !dbg !42
  %1 = tail call i32 (i64, ...)* bitcast (i32 (...)* @malloc to i32 (i64, ...)*)(i64 64) #3, !dbg !42
  call void @trace_logger_log0(i64 26, i8* getelementptr inbounds ([5 x i8]* @.str185, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str186, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str187, i32 0, i32 0), i64 35, i1 false, i1 true), !dbg !42
  %2 = zext i32 %1 to i64, !dbg !42
  call void @trace_logger_log_int(i64 1, i64 32, i64 %2, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str188, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str189, i32 0, i32 0)), !dbg !42
  %3 = sext i32 %1 to i64, !dbg !42
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %3, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str190, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str191, i32 0, i32 0)), !dbg !42
  call void @trace_logger_log0(i64 26, i8* getelementptr inbounds ([5 x i8]* @.str192, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str193, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str194, i32 0, i32 0), i64 43, i1 false, i1 true), !dbg !42
  call void @trace_logger_log_int(i64 1, i64 64, i64 %3, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str195, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str196, i32 0, i32 0)), !dbg !42
  %4 = inttoptr i64 %3 to i32*, !dbg !42
  %5 = ptrtoint i32* %4 to i64, !dbg !42
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %5, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str197, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str198, i32 0, i32 0)), !dbg !42
  tail call void @llvm.dbg.value(metadata !{i32* %4}, i64 0, metadata !23), !dbg !42
  %6 = tail call i32 (i64, ...)* bitcast (i32 (...)* @malloc to i32 (i64, ...)*)(i64 1024) #3, !dbg !43
  call void @trace_logger_log0(i64 27, i8* getelementptr inbounds ([5 x i8]* @.str199, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str200, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str201, i32 0, i32 0), i64 35, i1 false, i1 true), !dbg !43
  %7 = zext i32 %6 to i64, !dbg !43
  call void @trace_logger_log_int(i64 1, i64 32, i64 %7, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str202, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str203, i32 0, i32 0)), !dbg !43
  %8 = sext i32 %6 to i64, !dbg !43
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %8, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str204, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str205, i32 0, i32 0)), !dbg !43
  call void @trace_logger_log0(i64 27, i8* getelementptr inbounds ([5 x i8]* @.str206, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str207, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str208, i32 0, i32 0), i64 43, i1 false, i1 true), !dbg !43
  call void @trace_logger_log_int(i64 1, i64 64, i64 %8, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str209, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str210, i32 0, i32 0)), !dbg !43
  %9 = inttoptr i64 %8 to i32*, !dbg !43
  %10 = ptrtoint i32* %9 to i64, !dbg !43
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %10, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str211, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str212, i32 0, i32 0)), !dbg !43
  tail call void @llvm.dbg.value(metadata !{i32* %9}, i64 0, metadata !24), !dbg !43
  %11 = tail call i32 (i64, ...)* bitcast (i32 (...)* @malloc to i32 (i64, ...)*)(i64 64) #3, !dbg !44
  call void @trace_logger_log0(i64 28, i8* getelementptr inbounds ([5 x i8]* @.str213, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str214, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str215, i32 0, i32 0), i64 35, i1 false, i1 true), !dbg !44
  %12 = zext i32 %11 to i64, !dbg !44
  call void @trace_logger_log_int(i64 1, i64 32, i64 %12, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str216, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str217, i32 0, i32 0)), !dbg !44
  %13 = sext i32 %11 to i64, !dbg !44
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %13, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str218, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str219, i32 0, i32 0)), !dbg !44
  call void @trace_logger_log0(i64 28, i8* getelementptr inbounds ([5 x i8]* @.str220, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str221, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str222, i32 0, i32 0), i64 43, i1 false, i1 true), !dbg !44
  call void @trace_logger_log_int(i64 1, i64 64, i64 %13, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str223, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str224, i32 0, i32 0)), !dbg !44
  %14 = inttoptr i64 %13 to i32*, !dbg !44
  %15 = ptrtoint i32* %14 to i64, !dbg !44
  call void @trace_logger_log_int(i64 19134, i64 64, i64 %15, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str225, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str226, i32 0, i32 0)), !dbg !44
  tail call void @llvm.dbg.value(metadata !{i32* %14}, i64 0, metadata !25), !dbg !44
  call void @trace_logger_log0(i64 30, i8* getelementptr inbounds ([5 x i8]* @.str227, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str228, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str229, i32 0, i32 0), i64 49, i1 false, i1 true), !dbg !45
  call void @trace_logger_log_int(i64 4, i64 64, i64 ptrtoint (void (i32*, i32*, i32*)* @test to i64), i64 1, i8* getelementptr inbounds ([5 x i8]* @.str230, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str231, i32 0, i32 0)), !dbg !45
  %16 = ptrtoint i32* %4 to i64, !dbg !45
  call void @trace_logger_log_int(i64 1, i64 64, i64 %16, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str232, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str233, i32 0, i32 0)), !dbg !45
  %17 = ptrtoint i32* %4 to i64, !dbg !45
  call void @trace_logger_log_int(i64 24601, i64 64, i64 %17, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str234, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str235, i32 0, i32 0)), !dbg !45
  %18 = ptrtoint i32* %9 to i64, !dbg !45
  call void @trace_logger_log_int(i64 2, i64 64, i64 %18, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str236, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str237, i32 0, i32 0)), !dbg !45
  %19 = ptrtoint i32* %9 to i64, !dbg !45
  call void @trace_logger_log_int(i64 24601, i64 64, i64 %19, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str238, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str239, i32 0, i32 0)), !dbg !45
  %20 = ptrtoint i32* %14 to i64, !dbg !45
  call void @trace_logger_log_int(i64 3, i64 64, i64 %20, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str240, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str241, i32 0, i32 0)), !dbg !45
  %21 = ptrtoint i32* %14 to i64, !dbg !45
  call void @trace_logger_log_int(i64 24601, i64 64, i64 %21, i64 1, i8* getelementptr inbounds ([2 x i8]* @.str242, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str243, i32 0, i32 0)), !dbg !45
  tail call void @test(i32* %4, i32* %9, i32* %14) #4, !dbg !45
  call void @trace_logger_log0(i64 31, i8* getelementptr inbounds ([5 x i8]* @.str244, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str245, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str246, i32 0, i32 0), i64 1, i1 false, i1 true), !dbg !46
  call void @trace_logger_log_int(i64 1, i64 32, i64 0, i64 0, i8* getelementptr inbounds ([1 x i8]* @.str247, i32 0, i32 0), i64 0, i8* getelementptr inbounds ([4 x i8]* @.str248, i32 0, i32 0)), !dbg !46
  ret i32 0, !dbg !46
}

declare i32 @malloc(...) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata) #2

declare void @trace_logger_log0(i64, i8*, i8*, i8*, i64, i1, i1)

declare void @trace_logger_log_int(i64, i64, i64, i64, i8*, i64, i8*)

declare void @trace_logger_log_double(i64, i64, double, i64, i8*, i64, i8*)

declare void @trace_logger_write_labelmap(i8*, i64)

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nobuiltin nounwind }
attributes #4 = { nobuiltin }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!26, !27}
!llvm.ident = !{!28}

!0 = metadata !{i32 786449, metadata !1, i32 12, metadata !"clang version 3.4 (tags/RELEASE_34/final)", i1 true, metadata !"", i32 0, metadata !2, metadata !2, metadata !3, metadata !2, metadata !2, metadata !""} ; [ DW_TAG_compile_unit ] [/home/fyh/Workspace/ALADDIN/SHOC/test/test.c] [DW_LANG_C99]
!1 = metadata !{metadata !"test.c", metadata !"/home/fyh/Workspace/ALADDIN/SHOC/test"}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4, metadata !19}
!4 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"test", metadata !"test", metadata !"", i32 12, metadata !6, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i32*, i32*, i32*)* @test, null, null, metadata !10, i32 12} ; [ DW_TAG_subprogram ] [line 12] [def] [test]
!5 = metadata !{i32 786473, metadata !1}          ; [ DW_TAG_file_type ] [/home/fyh/Workspace/ALADDIN/SHOC/test/test.c]
!6 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !7, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!7 = metadata !{null, metadata !8, metadata !8, metadata !8}
!8 = metadata !{i32 786447, null, null, metadata !"", i32 0, i64 64, i64 64, i64 0, i32 0, metadata !9} ; [ DW_TAG_pointer_type ] [line 0, size 64, align 64, offset 0] [from int]
!9 = metadata !{i32 786468, null, null, metadata !"int", i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ] [int] [line 0, size 32, align 32, offset 0, enc DW_ATE_signed]
!10 = metadata !{metadata !11, metadata !12, metadata !13, metadata !14, metadata !15, metadata !16}
!11 = metadata !{i32 786689, metadata !4, metadata !"a", metadata !5, i32 16777228, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [a] [line 12]
!12 = metadata !{i32 786689, metadata !4, metadata !"b", metadata !5, i32 33554444, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [b] [line 12]
!13 = metadata !{i32 786689, metadata !4, metadata !"c", metadata !5, i32 50331660, metadata !8, i32 0, i32 0} ; [ DW_TAG_arg_variable ] [c] [line 12]
!14 = metadata !{i32 786688, metadata !4, metadata !"i", metadata !5, i32 13, metadata !9, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [i] [line 13]
!15 = metadata !{i32 786688, metadata !4, metadata !"j", metadata !5, i32 13, metadata !9, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [j] [line 13]
!16 = metadata !{i32 786688, metadata !17, metadata !"tmp", metadata !5, i32 15, metadata !9, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [tmp] [line 15]
!17 = metadata !{i32 786443, metadata !1, metadata !18, i32 14, i32 0, i32 1} ; [ DW_TAG_lexical_block ] [/home/fyh/Workspace/ALADDIN/SHOC/test/test.c]
!18 = metadata !{i32 786443, metadata !1, metadata !4, i32 14, i32 0, i32 0} ; [ DW_TAG_lexical_block ] [/home/fyh/Workspace/ALADDIN/SHOC/test/test.c]
!19 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"main", metadata !"main", metadata !"", i32 24, metadata !20, i1 false, i1 true, i32 0, i32 0, null, i32 0, i1 true, i32 ()* @main, null, null, metadata !22, i32 24} ; [ DW_TAG_subprogram ] [line 24] [def] [main]
!20 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !21, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!21 = metadata !{metadata !9}
!22 = metadata !{metadata !23, metadata !24, metadata !25}
!23 = metadata !{i32 786688, metadata !19, metadata !"a", metadata !5, i32 25, metadata !8, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [a] [line 25]
!24 = metadata !{i32 786688, metadata !19, metadata !"b", metadata !5, i32 25, metadata !8, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [b] [line 25]
!25 = metadata !{i32 786688, metadata !19, metadata !"c", metadata !5, i32 25, metadata !8, i32 0, i32 0} ; [ DW_TAG_auto_variable ] [c] [line 25]
!26 = metadata !{i32 2, metadata !"Dwarf Version", i32 4}
!27 = metadata !{i32 1, metadata !"Debug Info Version", i32 1}
!28 = metadata !{metadata !"clang version 3.4 (tags/RELEASE_34/final)"}
!29 = metadata !{i32 12, i32 0, metadata !4, null}
!30 = metadata !{i32 14, i32 0, metadata !18, null}
!31 = metadata !{i32 15, i32 0, metadata !17, null}
!32 = metadata !{metadata !33, metadata !33, i64 0}
!33 = metadata !{metadata !"int", metadata !34, i64 0}
!34 = metadata !{metadata !"omnipotent char", metadata !35, i64 0}
!35 = metadata !{metadata !"Simple C/C++ TBAA"}
!36 = metadata !{i32 16, i32 0, metadata !37, null}
!37 = metadata !{i32 786443, metadata !1, metadata !17, i32 16, i32 0, i32 2} ; [ DW_TAG_lexical_block ] [/home/fyh/Workspace/ALADDIN/SHOC/test/test.c]
!38 = metadata !{i32 17, i32 0, metadata !39, null}
!39 = metadata !{i32 786443, metadata !1, metadata !37, i32 16, i32 0, i32 3} ; [ DW_TAG_lexical_block ] [/home/fyh/Workspace/ALADDIN/SHOC/test/test.c]
!40 = metadata !{i32 19, i32 0, metadata !17, null}
!41 = metadata !{i32 21, i32 0, metadata !4, null}
!42 = metadata !{i32 26, i32 0, metadata !19, null}
!43 = metadata !{i32 27, i32 0, metadata !19, null}
!44 = metadata !{i32 28, i32 0, metadata !19, null}
!45 = metadata !{i32 30, i32 0, metadata !19, null}
!46 = metadata !{i32 31, i32 0, metadata !19, null}
